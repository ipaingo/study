1) Цели создания языка UML
	- Предоставить пользователям готовый к использованию язык визуального моделирования
	- Предоставить механизмы расширения и специализации
	- Быть независимым от определенного языка программирования и процесса разработки
	- Интегрировать лучший практический опыт разработок

2) Перечислить диаграммы языка UML
	- сценариев (use case diagram)
	- классов (class diagram)
	- состояния (statechart diagram)
	- активности (activity diagram)
	- последовательности (sequence diagram)
	- коммуникации (collaboration diagram)
	- компонентов (component diagram)
	- топологии (deployment diagram)
	
3) Что описывает диаграмма сценариев?
	- Диаграммы сценариев описывают функциональное назначение системы (то, что система будет делать в процессе своего функционирования)
	- Диаграммы сценариев являются исходной концептуальной моделью системы в процессе ее проектирования и разработки

4) Перечислить основные элементы диаграммы сценариев.
	- Сценарий
		- фрагмент поведения ИС без раскрытия его внутренней структуры
		- сервис, который информационная система предоставляет пользователю (актеру)
	- Актер
		- Актер представляет собой любую внешнюю по отношению к моделируемой ИС сущность, которая взаимодействует с системой и использует ее функциональные возможности для достижения определенных целей
	- Интерфейс
		- Интерфейс определяет совокупность операций, которые обеспечивают необходимый набор сервисов для актера
	- Примечание
		- Примечание предназначено для включения в модель произвольной текстовой информации, имеющей непосредственное отношение к контексту разрабатываемого проекта
	
5) Перечислить типы отношений на диаграмме сценариев.
	- отношение ассоциации (association)
	- отношение включения (include)
	- отношение расширения (extend)
	- отношение обобщения (generalization)
	
6) Что описывает диаграмма классов?
	- Диаграмма классов предназначена для представления статической структуры модели системы в терминологии классов объектно-ориентированного программирования

7) Перечислить основные элементы диаграммы классов.
	- Пакет
		- способ организации элементов модели. Каждый элемент модели принадлежит только одному пакету
	- Класс
		- обозначает множество объектов, которые обладаютодинаковой структурой, поведением и отношениями с объектами из других классов
	- Свойство
		- <квантор видимости>
		- <кратность>
		- <тип>
		- <исходное значение>
	- Метод
		- <параметр>
		- <вид>

8) Перечислить типы отношений на диаграмме классов.
	- отношение зависимости (dependency)
	- отношение ассоциации (association)
	- отношение агрегации (aggregation)
	- отношение композиции (composition)
	- отношение обобщения (generalization)
	- отношение реализации (realization)
	
9) Что описывает диаграмма состояний?
	- Диаграмма состояний описывает процесс изменения состояний только одного класса, а точнее – одного экземпляра класса, т. е. моделирует все возможные изменения в состоянии конкретного объекта
	- Диаграмма состояний – конечный автомат

10) Что такое состояние?
	- Состояние – набор конкретных значений атрибутов объекта

11) Перечислить основные элементы диаграммы состояний.
	- Состояние
		- набор конкретных значений атрибутов объекта
	- Начальное состояние
	- Конечное состояние
	- Переход
	- Составное состояние
		- Составное состояние состоит из вложенных в него подсостояний
		
12) Ограничения на диаграмме состояний.
	- Переход из состояния в состояние происходит мгновенно
	- История переходов из состояния в состояние не запоминается
	- В каждый момент времени объект может находиться только в одном из своих состояний
	- В любом состоянии объект может находиться как угодно долго
	- Время на диаграмме состояний присутствует в неявном виде
	- Количество состояний должно быть обязательно конечным
	- Не должно быть изолированных состояний и переходов
	- Не должно быть конфликтующих переходов
	
13) Что описывает диаграмма деятельности?
	- Диаграмма деятельности описывает процесс выполнения действий, т.е. логику или последовательность перехода от одного действия к другому
	- Диаграмма деятельности используется для моделирования бизнес-процессов

14) Перечислить основные элементы диаграммы деятельности.
	- Действие
		- Действие – операция, выражение, вычисления и т.д.
	- Переход
		- Переход срабатывает сразу после завершения действия
	- Ветвление
		- Ветвление – разделение на альтернативные ветви.
	- Соединение
		- Соединение – объединение альтернативных ветвей
	- Разделение
		- Разделение – распараллеливание действий
	- Согласование
		- Согласование – переход к следующему действию после окончания всех согласуемых действий

15) Что описывает диаграмма последовательности?
	- Диаграмма последовательности используется для представления временных особенностей передачи и приема сообщений между объектами

16) Перечислить основные элементы диаграммы последовательности.
	- Объект
	- Линия жизни
	- Фокус управления
	- Сообщение
	- Уничтожение объекта
	- Вызов
	- Асинхронное сообщение
	- Возврат
	- Метка

17) Перечислить типы сообщений на диаграмме последовательности.
	- Вызов процедуры
	- Асинхронное сообщение
	- Возврат из вызова процедуры
	
18) Что описывает диаграмма коммуникации?
	- Диаграмма коммуникации (кооперации) предназначена для спецификации структурных аспектов взаимодействия объектов

19) Перечислить основные элементы диаграммы коммуникации.
	- Объект
	- Ассоциация
	- Сообщение
	
20) Что описывает диаграмма компонентов?
	- Диаграмма компонентов описывает особенности физического представления системы
	
21) Перечислить основные элементы диаграммы компонентов.
	- Компонент
		- Компонент – крупно модульный объект:
			- исполняемый файл
			- подсистема
			- документ
			- и др
	- Интерфейс 
	- Зависимость 

22) Как на диаграмме компонентов отображается реализация классов, интерфейсов?
	- Реализация классов и интерфейсов отображается через отношения зависимости, показывающие какие классы или интерфейсы реализуются или используются компонентами.
	
23) Что описывает диаграмма топологии?
	- Диаграмма топологии применяется для представления общей конфигурации и топологии распределенной программной системы и содержит распределение компонентов по отдельным узлам системы

24) Перечислить основные элементы диаграммы топологии.
	- Узел
		- Узел – физически существующий элемент системы :
			- сервер
			- рабочая станция
			- принтер
			- цифровая камера
			- и др.
	- Компонент 
	- Ассоциация 

25) В какой последовательности разрабатываются диаграммы UML?
	- Диаграммы сценариев
	- Диаграммы деятельности
	- Диаграммы состояний
	- Диаграммы компонентов
	- Диаграммы топологии
	- Диаграммы коммуникации
	- Диаграммы последовательности
	- Диаграммы классов
	
26) Что такое CASE системы?
	CASE (Computer Aided Software Engineering) – программные средства, поддерживающие процессы создания и сопровождения ИС

27) Какими функциями обладают CASE системы?
	- Поддержка моделирования и проектирования систем.
	- Генерация кода на различных языках программирования.
	- Обратное проектирование и анализ существующего кода.
	- Управление конфигурацией и версиями проекта.
	- Интеграция с другими инструментами разработки.

28) Перечислить характеристики объектно-ориентированных систем.
	- локализация
	- инкапсуляция
	- информационная закрытость
	- наследование
	- абстракция

29) Описать метрики Чидамбера и Кемерера.
	- взвешенные методы на класс
	- высота дерева наследования
	- количество детей
	- сцепление между классами объектов
	- отклик для класса
	- недостаток связности в методах

30) Описать метрики Лоренца и Кидда.
	- размер класса
	- количество операций, переопределенных подклассом
	- количество операций, добавленных подклассом
	- индекс специализации
	- средний размер операции
	- сложность операции
	- среднее количество параметров на операцию
	- количество описаний сценариев
	- количество ключевых классов
	- количество подсистем

31) Описать метрики Абреу.
	- фактор закрытости метода
	- фактор закрытости свойства
	- фактор наследования метода
	- фактор наследования свойства
	- фактор полиморфизма
	- фактор сцепления

32) Для чего и как применяются метрики объектно-ориентрованных систем?	
	- Для оценки качества разработанных моделей используется специальный метрический аппарат
	- Для объектно-ориентированных систем выделяют пять характеристик качества: локализация, инкапсуляция, информационная закрытость, наследование, абстракция
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
